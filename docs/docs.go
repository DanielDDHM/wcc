// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/currencies": {
            "get": {
                "description": "Get all currencies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currencies"
                ],
                "summary": "Get All Currencies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "api secret",
                        "name": "x-api-secret",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPUnauthorized"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currencies"
                ],
                "summary": "New Currency",
                "parameters": [
                    {
                        "description": "Add Currency",
                        "name": "partner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CurrencyDto"
                        }
                    },
                    {
                        "type": "string",
                        "description": "api secret",
                        "name": "x-api-secret",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/partners": {
            "get": {
                "description": "Get all partner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partners"
                ],
                "summary": "Get All Partner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "api secret",
                        "name": "x-api-secret",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPUnauthorized"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new partner to consuming our api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partners"
                ],
                "summary": "New Partner",
                "parameters": [
                    {
                        "description": "Add Partner",
                        "name": "partner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreatePartnerDto"
                        }
                    },
                    {
                        "type": "string",
                        "description": "api secret",
                        "name": "x-api-secret",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPUnauthorized"
                        }
                    }
                }
            }
        },
        "/partners/disable/{id}": {
            "put": {
                "description": "Revogate partner to use our api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partners"
                ],
                "summary": "Revogate Partner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Partner id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "api secret",
                        "name": "x-api-secret",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPUnauthorized"
                        }
                    }
                }
            }
        },
        "/quotes": {
            "post": {
                "description": "Create a new quote",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quotes"
                ],
                "summary": "New Quote",
                "parameters": [
                    {
                        "description": "Add Quote",
                        "name": "partner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.RequestQuoteDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPUnauthorized"
                        }
                    }
                }
            }
        },
        "/quotes/confirm/{id}": {
            "put": {
                "description": "Confirm a quote",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quotes"
                ],
                "summary": "Confirm Quote",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPUnauthorized"
                        }
                    }
                }
            }
        },
        "/ratios": {
            "post": {
                "description": "Create a new custom ratio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Custom Ratio"
                ],
                "summary": "New Custom Ratio",
                "parameters": [
                    {
                        "description": "Add Custom Ratio",
                        "name": "partner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CustomRatioDto"
                        }
                    },
                    {
                        "type": "string",
                        "description": "api secret",
                        "name": "x-api-secret",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPUnauthorized"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.CreatePartnerDto": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                }
            }
        },
        "dtos.CurrencyDto": {
            "type": "object",
            "required": [
                "is_pivot",
                "iso_code",
                "name",
                "precision",
                "price_in_pivot",
                "separator",
                "type"
            ],
            "properties": {
                "is_pivot": {
                    "type": "boolean"
                },
                "iso_code": {
                    "type": "string",
                    "maxLength": 6,
                    "minLength": 3
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "precision": {
                    "type": "integer",
                    "maximum": 10
                },
                "price_in_pivot": {
                    "type": "string"
                },
                "separator": {
                    "type": "string",
                    "maxLength": 10
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dtos.CustomRatioDto": {
            "type": "object",
            "required": [
                "ask_ratio",
                "buy_ratio",
                "currency",
                "partner_id",
                "target"
            ],
            "properties": {
                "ask_ratio": {
                    "type": "number"
                },
                "buy_ratio": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "partner_id": {
                    "type": "integer"
                },
                "target": {
                    "type": "string"
                }
            }
        },
        "dtos.RequestQuoteDto": {
            "type": "object",
            "required": [
                "amount",
                "destination_currency",
                "origin_currency",
                "size"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "destination_currency": {
                    "type": "string"
                },
                "origin_currency": {
                    "type": "string"
                },
                "size": {
                    "type": "number"
                },
                "user_identifier": {
                    "type": "string"
                }
            }
        },
        "handlers.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "handlers.HTTPUnauthorized": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 401
                },
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                }
            }
        },
        "handlers.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
